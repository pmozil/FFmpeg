ffmpeg version git-2024-07-21-3973b11bf7 Copyright (c) 2000-2024 the FFmpeg developers
  built with gcc 12 (Ubuntu 12.3.0-1ubuntu1~22.04)
  configuration: --disable-doc --disable-shared --enable-static --disable-ffplay --disable-ffprobe --enable-vulkan --enable-libshaderc
  libavutil      59. 17.100 / 59. 17.100
  libavcodec     61.  5.103 / 61.  5.103
  libavformat    61.  3.103 / 61.  3.103
  libavdevice    61.  2.100 / 61.  2.100
  libavfilter    10.  2.101 / 10.  2.101
  libswscale      8.  2.100 /  8.  2.100
  libswresample   5.  2.100 /  5.  2.100
WARNING-CreateInstance-status-message(INFO / SPEC): msgNum: 601872502 - Validation Information: [ WARNING-CreateInstance-status-message ] Object 0: handle = 0x5ed1a63ba080, type = VK_OBJECT_TYPE_INSTANCE; | MessageID = 0x23dfd876 | vkCreateInstance():  Khronos Validation Layer Active:
    Settings File: Found at /home/petro/.local/share/vulkan/settings.d/vk_layer_settings.txt specified by VkConfig application override.
    Current Enables: VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT.
    Current Disables: None.

    Objects: 1
        [0] 0x5ed1a63ba080, type: 1, name: NULL
Input #0, matroska,webm, from 'vid_720.mkv':
  Metadata:
    COMPATIBLE_BRANDS: mp42mp41isomavc1
    MAJOR_BRAND     : mp42
    MINOR_VERSION   : 0
    ENCODER         : Lavf58.76.100
  Duration: 00:00:17.98, start: 0.000000, bitrate: 211182 kb/s
  Stream #0:0: Video: dirac, yuv420p(tv, bt709, progressive), 1920x1080, 29.97 fps, 29.97 tbr, 1k tbn (default)
      Metadata:
        HANDLER_NAME    : L-SMASH Video Handler
        VENDOR_ID       : [0][0][0][0]
        ENCODER         : Lavc58.134.100 vc2
        DURATION        : 00:00:17.984000000
Stream mapping:
  Stream #0:0 -> #0:0 (dirac (native) -> mpeg4 (native))
Press [q] to stop, [?] for help
Shader dequant: 
1	#version 460
2	#define IS_WITHIN(v1, v2) ((v1.x < v2.x) && (v1.y < v2.y))
3	
4	#extension GL_EXT_buffer_reference : require
5	#extension GL_EXT_buffer_reference2 : require
6	layout (set = 0, binding = 0) writeonly buffer out_buf_0 {
7	    int outBuf0[];
8	};
9	layout (set = 0, binding = 1) writeonly buffer out_buf_1 {
10	    int outBuf1[];
11	};
12	
13	#extension GL_EXT_debug_printf : enable
14	struct Slice {
15	    int left;
16	    int top;
17	    int tot_h;
18	    int tot_v;
19	    int tot;
20	    int offs;
21	};
22	struct SubbandOffset {
23	    int base_off;
24	    int stride;
25	};
26	layout (set = 1, binding = 0, std430) readonly buffer quant_in_buf {
27	    int inBuffer[];
28	};
29	layout (set = 1, binding = 1, std430) readonly buffer quant_vals_buf {
30	    int quantMatrix[];
31	};
32	layout (set = 1, binding = 2, std430) readonly buffer slices_buf {
33	    Slice slices[];
34	};
35	layout (set = 1, binding = 3) uniform subband_buf {
36	    SubbandOffset subband_offs[60];
37	};
38	
39	layout(push_constant, std430) uniform pushConstants {
40	    ivec2 plane_sizes[3];
41	    int plane_offs[3];
42	    int plane_strides[3];
43	    int dw[3];
44	    int wavelet_depth;
45	};
46	
47	#define DWT_LEVELS 5
48	
49	void dequant(int outIdx, int idx, int qf, int qs) {
50	    int val = inBuffer[idx];
51	    val = sign(val) * ((abs(val) * qf + qs) >> 2);
52	    outBuf0[outIdx] = outBuf1[outIdx] = val;
53	    if (gl_GlobalInvocationID.x == 0 && val != reals[outIdx])
54	    debugPrintfEXT("X = %i, Y = %i, val =%i, real_val = %i\n", outIdx % plane_sizes[0].x, outIdx / plane_sizes[0].x, val, reals[outIdx]);
55	}
56	
57	
58	void proc_slice(int slice_idx) {
59	    const int plane = int(gl_GlobalInvocationID.x);
60	    const int level = int(gl_GlobalInvocationID.y);
61	    const int base_idx = slice_idx * DWT_LEVELS * 8;
62	    const int act_slice_idx = slice_idx * DWT_LEVELS * 3
63	    + DWT_LEVELS * plane + level;
64	    const Slice s = slices[act_slice_idx];
65	    int offs = s.offs;
66	    
67	    for(int orient = int(bool(level)); orient < 4; orient++) {
68	        int qf = quantMatrix[base_idx + level * 8 + orient];
69	        int qs = quantMatrix[base_idx + level * 8 + 4 + orient];
70	        
71	        const int subband_idx = plane * DWT_LEVELS * 4
72	        + 4 * level + orient;
73	        
74	        const SubbandOffset sub_off = subband_offs[subband_idx];
75	        int img_idx = plane_offs[plane] + sub_off.base_off +
76	        s.top * sub_off.stride + s.left;
77	        
78	        for(int y = 0; y < s.tot_v; y++) {
79	            int img_x = img_idx;
80	            for(int x = 0; x < s.tot_h; x++) {
81	                dequant(img_x, offs, qf, qs);
82	                img_x++;
83	                offs++;
84	            }
85	            img_idx += sub_off.stride;
86	        }
87	    }
88	}
89	
90	void main()
91	{
92	    int idx = int(gl_GlobalInvocationID.z);
93	    proc_slice(idx);
94	}
dequant:53: error: 'reals' : undeclared identifier
dequant:53: error: 'reals' :  left of '[' is not of type array, matrix, or vector
dequant:54: error: 'reals' :  left of '[' is not of type array, matrix, or vector

shaderc compile status 'error' (3 errors, 0 warnings)
[dirac @ 0x5ed1a659d840] Failed setup for format vulkan: hwaccel initialisation returned error.
Impossible to convert between the formats supported by the filter 'graph -1 input from stream 0:0' and the filter 'auto_scale_0'
[vf#0:0 @ 0x5ed1a659ff80] Error reinitializing filters!
[vf#0:0 @ 0x5ed1a659ff80] Task finished with error code: -38 (Function not implemented)
[vf#0:0 @ 0x5ed1a659ff80] Terminating thread with return code -38 (Function not implemented)
[vost#0:0/mpeg4 @ 0x5ed1a6599340] Could not open encoder before EOF
[vost#0:0/mpeg4 @ 0x5ed1a6599340] Task finished with error code: -22 (Invalid argument)
[vost#0:0/mpeg4 @ 0x5ed1a6599340] Terminating thread with return code -22 (Invalid argument)
[out#0/matroska @ 0x5ed1a6591c40] Nothing was written into output file, because at least one of its streams received no packets.
frame=    0 fps=0.0 q=0.0 Lsize=       0KiB time=N/A bitrate=N/A speed=N/A    
Conversion failed!
